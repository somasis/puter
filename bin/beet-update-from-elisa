#!/usr/bin/env nix-shell
#! nix-shell -i bash -p bash coreutils gnused jq sqlite yq-go
# shellcheck shell=bash

set -euo pipefail

# shellcheck source=edo
. edo

: "${XDG_CONFIG_HOME:=${HOME}/.config}"
: "${XDG_DATA_HOME:=${HOME}/.local/share}"

: "${ELISA_DATABASE:=${XDG_DATA_HOME}/elisa/elisaDatabase.db}"
: "${BEETS_DIRECTORY:=}"

usage() {
    # shellcheck disable=SC2059
    [[ "$#" -eq 0 ]] || printf "$@" >&2

    cat >&2 <<EOF
usage: ${0##*/} [--dry-run]

Update tracks in the Beets database, based off of tracks
stored in the library database for Elisa, the KDE music player.

Currently, this means
- Updating the Beets database entries for tracks which have been rated in
  Elisa's database. Tracks rated in Elisa will have their corresponing
  Beets database entries be updated to have it in their \$rating field.

Kylie McClain <kylie@somas.is>
EOF
    exit 69
}

urldecode() {
    # Based off <https://stackoverflow.com/a/37840948>, but modified
    # to get rid of the expectation that spaces are escaped with '+',
    # since this isn't true of Elisa's own URL encoding.
    : "${*}"
    echo -e "${_//%/\\x}"
}

if [[ -z "${BEETS_DIRECTORY}" ]]; then
    BEETS_DIRECTORY=$(beet config -d | yq -o json | jq -r .directory)

    # shellcheck disable=SC2088
    case "${BEETS_DIRECTORY}" in
        '~/'*) # SC2088: don't suggest using $HOME
            # Expand tildes since `beet config -d` doesn't for us.
            BEETS_DIRECTORY=~/"${BEETS_DIRECTORY#'~/'}"
            ;;
    esac
fi

if ! [[ -e "${ELISA_DATABASE}" ]]; then
    printf 'error: Elisa database file does not exist (expected %s).\n' "${ELISA_DATABASE@Q}" >&2
    printf '       Make sure it exists before running this tool by running Elisa.\n' >&2
    exit 1
fi

# Elisa expects only absolute, physical, non-symlink paths.
BEETS_DIRECTORY_absolute=$(readlink -f "${BEETS_DIRECTORY}")

while [[ "$#" -gt 0 ]]; do
    case "${1-'--help'}" in
        --help) usage ;;
        --dry-run)
            edo() { echo "$ $*" >&2; }
            shift
            ;;
        --)
            shift
            break
            ;;
        *) usage 'error: unknown argument -- %s\n' "$1" ;;
    esac
done

beets=$(
    beet list -f 'file://$path'$'\t''$rating' \
        | sed -e 's/\$rating$/0/' -e "s|^file://${BEETS_DIRECTORY}/||" \
        | sort
)

# All paths from Elisa are absolute paths. URL decoding has to be used before
# comparing the paths to the paths in Beets' database.
elisa=$(
    sqlite3 -json -readonly "${ELISA_DATABASE}" 'SELECT FileName, Rating FROM Tracks;' \
        | jq --arg dir "${BEETS_DIRECTORY_absolute}/" -r \
            'map("\(.FileName | ltrimstr("file://\($dir)"))'$'\t''\(.Rating)")[]' \
        | while IFS= read -r filename; do urldecode "$filename"; done \
        | sort
)

# Then, actually perform the modifications on what tracks differ between beets
# and Elisa's databases. We do not account for changes in the other direction
# (that is, a rating being removed in Elisa and that being propagated to beets).
# TODO maybe? this script would need to be made a lot smarter I think to do that
# and probably rewritten
diff -u <(printf '%s\n' "${beets}") <(printf '%s\n' "${elisa}") | grep '^+' \
    | cut -c2- \
    | while IFS=$'\t' read -r filename elisa_rating; do
        if [[ -e "${BEETS_DIRECTORY}/$filename" ]]; then
            edo beet modify "$@" -y "path:${BEETS_DIRECTORY}/${filename}" rating="${elisa_rating}" || :
        fi
    done
