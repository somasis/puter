#!/usr/bin/env nix-shell
#! nix-shell -i bash -p bash coreutils curl jq
# shellcheck shell=bash

usage() {
    # shellcheck disable=SC2059
    [[ "$#" -eq 0 ]] || printf "$@" >&2

    cat >&2 <<EOF
usage: ${0##*/} [-l]

List show dates performed by Phish, as catalogued by Phish.in.

options:
    -l              List shows liked by your user.

see also: phishin-like-show

Kylie McClain <kylie@somas.is>
EOF
    [[ "$#" -eq 0 ]] || exit 1
    exit 69
}

curl() {
    command curl --no-progress-meter --user-agent "${user_agent}" "$@"
}

fetch_shows_page() {
    curl \
        --fail-with-body \
        --get \
        --variable %PHISHIN_USER_TOKEN \
        --expand-header 'X-Auth-Token: {{PHISHIN_USER_TOKEN}}' \
        -d liked_by_user="${liked_by_user}" \
        -d "page=${1?no page provided}" \
        "https://phish.in/api/v2/shows"
}

set -euo pipefail

user_agent='phish-cli <kylie@somas.is>'
liked_by_user=false
while getopts :l opt >/dev/null 2>&1; do
    case "$opt" in
        l) liked_by_user=true ;;
        *) usage 'error: unknown command: %s\n' "${opt}" ;;
    esac
done
shift $((OPTIND - 1))

PHISHIN_USER_TOKEN=$(phishin-auth-login)
export PHISHIN_USER_TOKEN


pages=("$(fetch_shows_page 1)")
total_pages=$(jq -cre '.total_pages' <<<"${pages[0]}")
i=0
for i in $(seq 2 "${total_pages}"); do
    if ! page=$(fetch_shows_page "${i}") || [[ -z "${page}" ]]; then
        printf 'error getting shows (page %i/%i): %s\n' \
            "${i}" "${total_pages}" "${page}" >&2
        exit 1
    fi
    pages+=("${page}")
done

jq -cr '.shows[].date' <<<"${pages[*]}"
