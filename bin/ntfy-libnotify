#!/usr/bin/env bash
#!/usr/bin/env nix-shell
#! nix-shell -i bash -p bash libnotify jq sed xurls
# shellcheck shell=bash
# vim: ft=sh

set -euo pipefail

# shellcheck disable=SC2120
usage() {
    # shellcheck disable=SC2059
    [[ "$#" -eq 0 ]] || printf "$@" >&2

    cat >&2 <<EOF
usage: ntfy subscribe <topic> ${0##*/}

Show a desktop notification sent to ntfy.sh, using \`notify-send\`. How this
differs from just using \`notify-send "\$NTFY_TITLE" "\$NTFY_MESSAGE"\`,
is that this script takes care to translate the ntfy.sh notification metadata
to its freedesktop.org notification specification equivalents.

Example usage in ${XDG_CONFIG_HOME:-$HOME/.config}/ntfy/client.yaml:
\`\`\`yaml
default-command: ${0##*/}

# and/or

subscribe:
  - topic: zfs-scrubs
    command: ${0##*/}
\`\`\`

environment variables:
    \$XDG_CONFIG_HOME${XDG_CONFIG_HOME:+ (current: ${XDG_CONFIG_HOME@Q})}
    \$NTFY_MESSAGE, \$NTFY_PRIORITY, \$NTFY_RAW, \$NTFY_TAGS, \$NTFY_TITLE
        These variables should be set when invoked by \`ntfy subscribe\`.

Kylie McClain <kylie@somas.is>
EOF
    [[ "$#" -eq 0 ]] || exit 1
    exit 64 # EX_USAGE
}

command -V jq notify-send sed xdg-open xurls >/dev/null

case "${1:-}" in
    --help) usage ;;
esac

: "${NTFY_ID:=}"
: "${NTFY_TIME:=}"
: "${NTFY_TOPIC:=}"
: "${NTFY_MESSAGE:=}"
: "${NTFY_TITLE:=}"
: "${NTFY_PRIORITY:=}"
: "${NTFY_TAGS:=}"
: "${NTFY_RAW:=}"

args=()

click=$(jq -rc '.click // ""' <<<"${NTFY_RAW}" || :)

case "${NTFY_PRIORITY:-3}" in
    1) priority=low ;;
    2) args+=( --transient ); priority=low ;;
    3) priority=normal ;;
    4) priority=normal ;;
    5) priority=critical ;;
    *)
        printf 'error: invalid priority: %s\n' "${NTFY_PRIORITY}" >&2
        exit 64
        ;;
esac

case "${NTFY_TITLE}" in
    *': '*)
        appname=${NTFY_TITLE%%: *}
        title=${NTFY_TITLE#*: }
        ;;
    *' - '*)
        appname=${NTFY_TITLE%% - *}
        title=${NTFY_TITLE#* - }
        ;;
    *) title="${NTFY_TITLE:-${NTFY_TAGS%%,*}}" ;;
esac

message="${NTFY_MESSAGE}"

args+=(
    ${priority:+-u "$priority"}
    -a "${appname:-ntfy.sh}"
)

mapfile -t urls < <(xurls <<<"${message}")

for url in "${urls[@]}"; do
    url_hyperlink="<a href=${url}>${url}</a>"
    message=${message/"$url"/"$url_hyperlink"}
done

if [[ -n "${click:-}" ]]; then
    args+=(-A click=Open)
    args+=(--expire-time $((60 * 1000)))
fi

(
    action=$(notify-send "${args[@]}" ${title:+"${title}"} "${message}")

    case "${action}" in
        click)
            xdg-open "${click}" &
            disown
            ;;
    esac
) &
disown
