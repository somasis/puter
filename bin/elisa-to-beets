#!/usr/bin/env nix-shell
#! nix-shell -i bash -p bash sqlite teip gnused trurl coreutils jq yq-go
# shellcheck shell=bash

set -euo pipefail

usage() {
    # shellcheck disable=SC2059
    [[ "$#" -eq 0 ]] || printf "$@" >&2

    cat >&2 <<EOF
usage: ${0##*/} [--dry-run] [options for \`beet modify\`]...

Synchronize rated tracks from Elisa, the KDE music player, to
the rating tag stored in Beets.

See \`beet modify --help\` for more details.

Kylie McClain <kylie@somas.is>
EOF
    exit 69
}

: "${XDG_CONFIG_HOME:=${HOME}/.config}"
: "${XDG_DATA_HOME:=${HOME}/.local/share}"

: "${ELISA_DATABASE:=${XDG_DATA_HOME}/elisa/elisaDatabase.db}"
: "${BEETS_DIRECTORY:=}"

. edo

if [[ -z "${BEETS_DIRECTORY}" ]]; then
    BEETS_DIRECTORY=$(beet config -d | yq -o json | jq -r .directory)

    # shellcheck disable=SC2088
    case "${BEETS_DIRECTORY}" in
        '~/'*) # SC2088: don't suggest using $HOME
            # Expand tildes since `beet config -d` doesn't for us.
            BEETS_DIRECTORY=~/"${BEETS_DIRECTORY#'~/'}"
            ;;
    esac
fi

if [[ -e "${ELISA_DATABASE}" ]]; then
    printf 'error: Elisa database file does not exist (expected %s).\n' "${ELISA_DATABASE@Q}" >&2
    printf '       Make sure it exists before running this tool by running Elisa.\n' >&2
    exit 1
fi

# Elisa expects only absolute, physical, non-symlink paths.
BEETS_DIRECTORY_absolute=$(readlink -f "${BEETS_DIRECTORY}")

while [[ "$#" -gt 0 ]]; do
    case "${1-'--help'}" in
        --help) usage ;;
        --dry-run)
            edo() { echo "$ $*" >&2; }
            shift
            ;;
        --)
            shift
            break
            ;;
        *) usage 'error: unknown argument -- %s\n' "$1" ;;
    esac
done

beets=$(
    beet list -f 'file://$path'$'\t''$rating' \
        | sed -e 's/\$rating$/0/' -e "s|^file://${BEETS_DIRECTORY}/||" \
        | sort
)

# All paths from Elisa are absolute paths.
# `trurl` is used so that URL decoding is used; Elisa stores the paths with that.
elisa=$(
    sqlite3 -json -readonly "${ELISA_DATABASE}" 'SELECT FileName, Rating FROM Tracks;' \
        | jq --arg dir "${BEETS_DIRECTORY_absolute}/" -r \
            'map("\(.FileName | ltrimstr("file://\($dir)"))'$'\t''\(.Rating)")[]' \
        | while IFS= read -r filename; do urldecode "$filename"; done \
        | sort
)

diff -u <(printf '%s\n' "${beets}") <(printf '%s\n' "${elisa}") | grep '^+' \
    | cut -c2- \
    | while IFS=$'\t' read -r filename elisa_rating; do
        if [[ -e "${BEETS_DIRECTORY}/$filename" ]]; then
            edo beet modify "$@" -y "path:${BEETS_DIRECTORY}/${filename}" rating="${elisa_rating}" || :
        fi
    done
