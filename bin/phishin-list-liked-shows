#!/usr/bin/env nix-shell
#! nix-shell -i bash -p bash coreutils curl jq
# shellcheck shell=bash

: "${PHISHIN_USER_ENTRY:=www/phish.in}"
: "${PHISHIN_USER_EMAIL:=$(pass meta "${PHISHIN_USER_ENTRY}" email)}"
: "${PHISHIN_USER_PASSWORD:=$(pass meta "${PHISHIN_USER_ENTRY}" password)}"

set -euo pipefail

usage() {
    # shellcheck disable=SC2059
    [[ "$#" -eq 0 ]] || printf "$@" >&2

    cat >&2 <<EOF
usage: ${0##*/}

List all show dates liked by your user on Phish.in.

options:
    <show>          An ISO formatted date (ex. 1969-12-31)

variables:
    \$PHISHIN_USER_EMAIL${PHISHIN_USER_EMAIL:+ [currently: $PHISHIN_USER_EMAIL]}
        The email which will be used to authenticate to Phish.in.
    \$PHISHIN_USER_PASSWORD${PHISHIN_USER_PASSWORD:+ [currently: $PHISHIN_USER_PASSWORD]}
        The password which will be used to authenticate to Phish.in.

see also: phishin-like-show

Kylie McClain <kylie@somas.is>
EOF
    [[ "$#" -eq 0 ]] || exit 1
    exit 69
}

curl() {
    command curl --no-progress-meter --user-agent "${user_agent}" "$@"
}

fetch_liked_shows_page() {
    printf 'X-Auth-Token: %s\n' "${PHISHIN_USER_TOKEN}" \
        | curl \
            --fail-with-body \
            --header @- \
            --get \
            -d liked_by_user=true \
            -d "page=${1?no page provided}" \
            "https://phish.in/api/v2/shows"
}

user_agent='phish-cli <kylie@somas.is>'

export PHISHIN_USER_EMAIL PHISHIN_USER_PASSWORD

if ! PHISHIN_USER_TOKEN=$(
    export PHISHIN_USER_EMAIL PHISHIN_USER_PASSWORD
    jq -nc '{"email": env.PHISHIN_USER_EMAIL, "password": env.PHISHIN_USER_PASSWORD}' \
        | curl --fail-with-body -X POST --json @- 'https://phish.in/api/v2/auth/login'
) || [[ -z "${PHISHIN_USER_TOKEN}" ]]; then
    printf 'error during authentication: %s\n' "${PHISHIN_USER_TOKEN}" >&2
    exit 1
fi

PHISHIN_USER_NAME=$(jq -cre '.username' <<<"${PHISHIN_USER_TOKEN}")
PHISHIN_USER_TOKEN=$(jq -cre '.jwt' <<<"${PHISHIN_USER_TOKEN}")

pages=("$(fetch_liked_shows_page 1)")
total_pages=$(jq -cre '.total_pages' <<<"${pages[0]}")

for i in $(seq 2 "${total_pages}"); do
    if ! page=$(fetch_liked_shows_page "${i}") || [[ -z "${page}" ]]; then
        printf 'error getting liked shows (page %i/%i): %s\n' "${i}" "${total_pages}" "${page}"
        exit 1
    fi
    pages+=("${page}")
done

jq -cr '.shows[].date' <<<"${pages[*]}"
