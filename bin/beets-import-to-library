#!/usr/bin/env nix-shell
#! nix-shell -i bash -p bash coreutils libnotify util-linux yq-go xdg-utils
# shellcheck shell=bash

set -euo pipefail

# shellcheck disable=SC2120
usage() {
    # shellcheck disable=SC2059
    [[ "$#" -eq 0 ]] || printf "$@" >&2

    cat >&2 <<EOF
usage: ${0##*/} <directory ...>

Import directories into the Beets library, allowing the user to break
out into more manual usage of \`beet import <album>...\` when desired.

environment variables:
    \$WITH_NTFY${WITH_NTFY:+ (current: ${WITH_NTFY@Q})}
    \$NTFY_TOPIC${NTFY_TOPIC:+ (current: ${NTFY_TOPIC@Q})}
        If \$WITH_NTFY is set, send notifications to \$NTFY_TOPIC
        using \`ntfy publish\` on failed and successful imports.

see also: beet import.

Kylie McClain <kylie@somas.is>
EOF

    [[ "$#" -eq 0 ]] || exit 1
    exit 64 # EX_USAGE
}

# shellcheck disable=SC2119
case "${1:---help}" in
    --help | -h) usage ;;
esac

# If another instance is running, just wait until it's gone.
if [[ "${FLOCKER:-}" != "${0}" ]]; then
    export FLOCKER="$0"
    exec flock -e "$0" "$0" "$@"
fi

edo() {
    local arg string
    string="$"
    for arg; do
        if [[ "${arg@Q}" == "'$arg'" ]] && ! [[ "${arg}" =~ [[:blank:]] ]]; then
            string+=" $arg"
        else
            string+=" ${arg@Q}"
        fi
    done

    printf '%s\n' "$string" >&2 || :
    "$@"
}

notify-send() {
    command notify-send \
        --hint='string:desktop-entry:beets-import-to-library.desktop' \
        "$@"
}

exec-to-terminal() {
    exec xdg-terminal "${*@Q}"
}

finish_import() {
    latest_after_import=$(beet ls -p -a 'added-' | head -n 1 || :)
    [[ -n "${latest_after_import:-}" ]] \
        && [[ "${latest_after_import}" != "${latest_before_import:-}" ]] \
        || return 1

    # shellcheck disable=SC2016
    if artpath=$(beet ls -f '$artpath' -a "${latest_after_import}") && [[ "${artpath}" != 'None' ]]; then
        printf 'using art for notification: %s\n' "${artpath}" >&2
    else
        artpath=
    fi

    # shellcheck disable=SC2016
    format=$(
        beet ls \
            -f 'Successfully imported $albumartist - $album ($year) using metadata from $data_source.' \
            -a \
            "${latest_after_import}"
    )

    if [[ -n "${WITH_NTFY:-}" ]]; then
        : "${NTFY_TOPIC:?error: no \$NTFY_TOPIC provided}"
        : "${NTFY_CONFIG=${XDG_CONFIG_HOME:=$HOME/.config}/ntfy/client.yml}"

        ntfy publish \
            ${NTFY_CONFIG:+-c "$NTFY_CONFIG"} \
            --priority 2 \
            --title 'beets-import-to-library: Imported directory to library' \
            --message "${format}" \
            --tags 'cd' \
            ${artpath:+--file="$artpath"} \
            &
    fi

    # Fork off here so that the actions are available as long as the
    # notification is.
    {
        action=$(
            notify-send \
                --urgency=normal \
                --replace-id="$id" \
                -a "${0##*/}" \
                -A 'play=Play' \
                -A 'directory=Open directory' \
                -A 'undo=Undo' \
                -A 'redo=Reimport manually...' \
                ${artpath:+-i "${artpath}"} \
                'Music imported to library' \
                "${format}"
        )

        case "${action}" in
            play)
                edo beet play -a path:"${latest_after_import}" &
                ;;
            directory)
                edo xdg-open "${latest_after_import}" &
                disown
                ;;
            undo)
                exec-to-terminal beet rm -adf "${latest_after_import}"

                # HACK for beets' thumbnails plugin not deleting .directory :/
                rm -r "${latest_after_import}"
                ;;
            redo)
                exec-to-terminal beet import "${beet_import_args}" \
                    --timid --noincremental \
                    -L "${latest_after_import}"
                ;;
        esac
    } &
    disown

    exit
}

beets_import_args=()
for arg in "$@"; do
    case "${arg}" in
        --) break ;;
        --*) beets_import_args+=("${arg}") ;;
        ./* | /* | *) break ;;
    esac
done

beet_import_args+=(
    --flat # Each argument should count as an album, for the purposes of this script
    --noincremental
)

library_directory=$(beet config -d | yq -p yaml .library)

for import; do
    if ! [[ -d "$import" ]]; then
        printf 'error: %s is not a directory\n' "${import@Q}" >&2
        exit 64
    fi
done

import_errors=()
for import; do
    error=0
    export import
    (
        case "${import}" in
            "${library_directory}"/*)
                beet_import_args+=(--nocopy --move)
                ;;
        esac

        test -e "${import}"

        printf 'importing %s to music library...\n' "${import@Q}" >&2

        # Wait 15 seconds, then begin importing.
        mapfile -t notify_output < <(
            notify-send \
                -t $((15 * 1000)) \
                --urgency=low \
                --print-id \
                -a "${0##*/}" \
                -A 'timid-exit=Import manually...' \
                -A 'skip=Skip' \
                'Importing...' \
                "$(basename "${import}")"
        )

        id=${notify_output[0]}

        # shellcheck disable=SC2178
        action=${notify_output[1]:-}

        case "${action}" in
            timid-exit)
                exec-to-terminal \
                    beet import \
                    "${beet_import_args[@]}" \
                    --timid --noincremental \
                    "${import}"
                ;;
            skip) exit 0 ;;
        esac

        latest_before_import=$(beet ls -p -a 'added-' | head -n 1 || :)
        import_exit=0

        beets_skipped_log=$(mktemp)

        edo beet import --quiet --log "$beets_skipped_log" "${beet_import_args[@]}" "${import}"
        import_exit=$?

        if grep -q '^skip' "$beets_skipped_log" || [[ "$import_exit" -ne 0 ]]; then
            import_exit=1

            {
                if [[ -n "${WITH_NTFY:-}" ]]; then
                    : "${NTFY_TOPIC:?error: no \$NTFY_TOPIC provided}"
                    : "${NTFY_CONFIG=${XDG_CONFIG_HOME:=$HOME/.config}/ntfy/client.yml}"

                    ntfy publish \
                        ${NTFY_CONFIG:+-c "$NTFY_CONFIG"} \
                        --priority 4 \
                        --title "beets-import-to-library: Failed while importing (error code: ${import_exit})" \
                        --message "${format}" \
                        --tags 'speech_balloon' \
                        &
                fi

                action=$(
                    notify-send --wait \
                        --urgency=critical \
                        --replace-id="$id" \
                        -a "${0##*/}" \
                        -A 'timid-exit=Import manually...' \
                        'Failed to import music' \
                        "Failed to import ${import@Q} (error code: ${import_exit})."
                )

                case "${action}" in
                    timid-exit)
                        exec-to-terminal beet import "${beet_import_args[@]}" \
                            --timid --noincremental \
                            "${import}"
                        ;;
                esac
            } &
            disown

            exit 1
        fi

        rm -f "$beets_skipped_log"

        finish_import
        printf 'successfully imported: %s -> %s\n' "${import@Q}" "${latest_after_import@Q}" >&2
    ) || error=$?

    if [[ "$error" -ne 0 ]]; then
        import_errors+=("$import")
    fi
done

if [[ "${#import_errors[@]}" -gt 0 ]]; then
    printf '\n%i import(s) failed for some reason:\n' "${#import_errors[@]}" >&2
    printf '    - %s\n' "${import_errors[@]}" >&2
    exit 2
fi
